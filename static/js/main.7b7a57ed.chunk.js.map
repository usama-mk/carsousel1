{"version":3,"sources":["firebase.js","Pages/Login.jsx","Pages/carousel.jsx","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","storage","Login","props","handleLogin","check","console","log","setState","username","password","adminCheckP","state","this","title","hintText","floatingLabelText","onChange","event","newValue","type","label","primary","style","onClick","admin","React","Component","margin","require","Carousel","DemoCarousel","useState","image","setImage","urlArray","setUrlArray","progress","setProgress","useEffect","collection","onSnapshot","snapshot","docs","map","doc","id","data","className","autoPlay","interval","infiniteLoop","swipeable","emulateTouch","dynamicHeight","showThumbs","url","IconButton","href","width","alt","src","imageUrl","height","Button","imageName","delete","variant","color","startIcon","Delete","position","bottom","value","max","target","files","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","push","add","CloudUpload","Home","VerifiedUser","App","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7b7a57ed.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCW8KRQdx2ZLPW3wmNHUIpXG1QgfGWfCyI\",\n    authDomain: \"carousel-client.firebaseapp.com\",\n    databaseURL: \"https://carousel-client.firebaseio.com\",\n    projectId: \"carousel-client\",\n    storageBucket: \"carousel-client.appspot.com\",\n    messagingSenderId: \"380997395852\",\n    appId: \"1:380997395852:web:ac88383e5d8199e27be2a9\",\n    measurementId: \"G-T6CD1GENRX\"\n  };\n  // Initialize Firebase\n  const firebaseApp= firebase.initializeApp(firebaseConfig);\n  const db= firebaseApp.firestore();\n  const storage= firebase.storage();\n\n  export{storage,db, firebase as default};","import React from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport DemoCarousel from './carousel';\nclass Login extends React.Component {\n \nconstructor(props){\n  super(props);\n  this.state={\n  username:'',\n  password:'',\n  adminCheckP: null,\n  }\n }\n  \n  handleLogin= (check)=>{\n      console.log(check)\n   this.setState({username:'', password:'', adminCheckP: check}) \n }\nrender() {\n    return (\n    this.state.adminCheckP ?<DemoCarousel adminCheckP /> : <div>\n        <MuiThemeProvider>\n          <div>\n          <AppBar\n             title=\"Login\"\n           />\n           <TextField\n             hintText=\"Enter your Username\"\n             floatingLabelText=\"Username\"\n             onChange = {(event,newValue) =>{this.setState({username:newValue});\n            \n                                             ;         } }\n             />\n           <br/>\n             <TextField\n               type=\"password\"\n               hintText=\"Enter your Password\"\n               floatingLabelText=\"Password\"\n               onChange = {(event,newValue) => this.setState({password:newValue})}\n               />\n             <br/>\n            \n             <RaisedButton label=\"Submit\" primary={true} style={style} onClick={()=>{this.handleLogin(this.state.username== admin && this.state.password==password)}}/>\n             \n         </div>\n         </MuiThemeProvider>\n      </div>\n    );\n  }\n}\nconst style = {\n margin: 15,\n};\nconst admin= \"admin\";\nconst password= \"mika123\";\nexport default Login;","import \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport './carousel.css';\nimport { Button, IconButton } from '@material-ui/core';\nimport { Delete, CloudUpload, VerifiedUser, Home } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport { storage } from \"../firebase\";\nimport { db } from \"../firebase\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { adminCheck } from \"./Login\";\nvar React = require('react');\nvar Carousel = require('react-responsive-carousel').Carousel;\n\n\nconst DemoCarousel = (props) => {\n\n\n    const form = \"https://goasolutions.paperform.co/\";\n    const [image, setImage] = useState(null);\n    const [urlArray, setUrlArray] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [adminCheck, setAdminCheck] = useState(props.adminCheckP);\n    console.log(\"admin pppp check: \")\n    console.log(props.adminCheckP);\n\n\n\n    useEffect(() => {\n        db.collection(\"imagesData\").onSnapshot((snapshot) =>\n            setUrlArray(\n                snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    data: doc.data(),\n                }))\n            )\n        );\n    }, [])\n\n    const selectFileHandler = (event) => {\n        if (event.target.files[0]) {\n            setImage(event.target.files[0]);\n        }\n\n    }\n\n    const deleteImage = (id, name) => {\n        db.collection(\"imagesData\").doc(id).delete();\n        //delete from storage\n\n\n        // var desertRef = storage.ref(`images/${image.name}`);\n        // desertRef.delete().then(function() {\n        //     // File deleted successfully\n        //   }).catch(function(error) {\n        //     // Uh-oh, an error occurred!\n        //     console.log(error);\n        //   });\n    }\n\n    const uploadFileHandler = () => {\n        if (image) {\n            const uploadTask = storage.ref(`images/${image.name}`).put(image);\n            uploadTask.on(\n                \"state_changed\",\n                snapshot => {\n                    const progress = Math.round(\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                    );\n                    setProgress(progress);\n                },\n                error => {\n                    console.log(error);\n                },\n                () => {\n                    storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n                        urlArray.push(url);\n                        console.log(urlArray);\n                        db.collection(\"imagesData\").add({\n                            imageUrl: url,\n                            imageName: image.name\n                        });\n\n                    })\n                }\n            )\n        }\n    }\n\n\n\n    return (\n        true ? <div className=\"carousel\">\n\n            <Carousel autoPlay interval=\"2000\" infiniteLoop swipeable emulateTouch dynamicHeight showThumbs={false} >\n\n                {urlArray.map((url) =>\n                    (<div>\n\n                        <IconButton href={form} style={{ width: \"99vw\" }}>\n                            <img alt=\"Not Loaded\" src={url.data.imageUrl} height=\"400\" width=\"480\" />\n\n                        </IconButton>\n                        <br />\n                        {props.adminCheckP ? (<Button\n                            onClick={() => { deleteImage(url.id, url.data.imageName) }}\n                            variant=\"contained\"\n                            color=\"default\"\n                            // className=\"deleteButton\"\n                            startIcon={<Delete />}\n                            style={{ margin: \"0\", position: \"relative\", bottom: \"40px\" }}\n                        >\n                            Delete\n                        </Button>) : <div> </div>}\n\n                    </div>)\n                )}\n\n                {/* <div>\n                <img alt=\"\" src={urlArray[1]} height=\"400\" width=\"480\" />    \n                    <p className=\"legend\">Legend 14</p>\n                </div> */}\n            </Carousel>\n            {props.adminCheckP ? (<div className=\"carousel_actions\">\n\n                <progress value={progress} max=\"100\" />\n                <br />\n                <input type=\"file\" onChange={selectFileHandler} id=\"upload-button\" />\n\n                <Button\n                    onClick={uploadFileHandler}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    // className=\"uploadButton\"\n                    startIcon={<CloudUpload />}\n                >\n                    Upload\n</Button>\n\n\n\n                <a href=\"/carsousel1\">\n\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        // className=\"uploadButton\"\n                        startIcon={<Home />}\n                    >\n                        Home\n</Button>\n                </a>\n\n\n\n\n\n\n            </div>) : (<div>\n                <a href={\"/admin\"}>\n\n                    <Button\n                        // onClick={adminHandler}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        // className=\"uploadButton\"\n                        startIcon={<VerifiedUser />}\n                    >\n                        Admin Login\n</Button>\n                </a>\n\n            </div>)}\n\n        </div> : <div><h1>hi</h1></div>\n\n    );\n\n}\nexport default DemoCarousel;\n\n\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport DemoCarousel from './Pages/carousel';\nimport Login from './Pages/Login';\n\n\nfunction App() {\n  return (\n\n    <div className=\"App\">\n\n      <Switch>\n      <Route exact path='/carsousel' render={()=>(<DemoCarousel adminCheckP={false} />)}  />\n     <Route exact path='/admin' component={Login}  />\n     <Route exact path='/admin/carsousel' component={DemoCarousel}/>\n    \n     </Switch>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n  <Router>\n    \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}